# Head

<<<<<<< HEAD
# 0.1.23 - 2013 December 4th

- Implemented the RIGHT function in ruby
=======
- A lot of changes: no longer generates intermediate files, hopefully faster, but perhaps not
>>>>>>> Updated CHANGES

# 0.1.22 - 2013 December 4th

- Fixed a bug in = and != when comparing a string with a non string
- Implemented the LEN function in ruby
- Implemented the SUBSTITUTE function in ruby

# 0.1.21 - 2013 November 19th

- String joins can now be done on excel ranges
- Fixed bug in parsing of table references when they look like this: table.name[[column_name_inside_two_square_brackets]]
- Fixed OFFSET to work with sheet as well as cell references
- Implemented ISNUMBER function
- Fixed bug in OFFSET replacement
- Can now parse structured table references like this: G.40.levels.efficiency[[Description]:[Description]]
- Fixed StringIO#lines is deprecated warning.

# 0.1.20 - 2013 August 28th

- Fix compiler warnings relating to comparing a string literal

# 0.1.19 - 2013 August 24th

- Implemented the RANK() function

# 0.1.18 - 2013 August 23rd

- Implemented the CONCATENATE() function

# 0.1.17 - 2013 August 22nd

- Changed the way that shared targets are converted into a hash to avoid a stack overflow when there are very large numbers of shared formulae in a worksheet.

# 0.1.16 - 2013 August 21st

- Now returns the correct answer when MMULT() is used outside of an array formula

# 0.1.15 - 2013 August 21st

- Now translates formulae that peform arithmetic on ranges, such as SUMPRODUCT(A1:A10, 1/B1:B10)

# 0.1.14 - 2013 August 20th

- Implementing the MMULT function in ruby and C (note only works when entered as an array formula)

# 0.1.13 - 2013 August 19th

- Implemented LOG function in ruby and C
- Now converts the POWER(10,2) function as well as 10^2

# 0.1.12

- Fixed bug in working out how many passes to carry out when trying to eliminate INDIRECT() and other functions

# 0.1.11

- C version Now returns NUM error when trying to do a non integer power of a negative number
- Previously where shared formulae overlapped, the last would win. Now the correct one wins.
- Tests are now output in dependency order, so the first test to fail is likely to be closest to the underlying problem.
- VLOOKUP and HLOOKUP now accept 1 and 0 in place of TRUE and FALSE on their last argument
- Inline strings now have newlines stripped to be consistent with shared strings (it would be better if they were stripped in neither)
- INDEX now returns zero, not blank, when pointing to an empty cell
- If a range points to a single cell, then that is used rather than a range
- Fixed a bug where a nested sum would return 0 rather than an error in C code
- Implementing the HLOOKUP function
- When running in memory mode, now allows old intermediate files to be garbage collected, reducing memory use

# 0.1.10

- Now replaces INDIRECT() functions that have a second argument (but note, excel_to_code only supports A1 refs, not R1C1).
- Now repeats its passes to replace formulae with values until there is no more to be done
- Partially implemented the TEXT() function (for '0%' format only at this stage)
- Can now replace INDIRECT() functions where they argument is an error
- Inlining now copes with references to missing worksheets
- Implement the PV() function in ruby and C
- Implemented TRIM(), MID() and partially implemented CELL() in ruby
- The negative prefix can now operate on ranges
- Now attempts to simplify COLUMN() functions out of the spreadsheet at compile time (the function is not supported at runtime)
- Fix bug in the treatment of array results when simplifying INDEX functions
- Fixed a bug in replacing some table references with their values
- Now attempts to simplify OFFSET() functions out of the spreadsheet at compile time (the function is NOT supported at runtime)
- COUNT() functions are now replaced with their values if possible at compile time
- New option for cells_that_can_be_set_at_runtime = :named_references_only that only creates settable values for references that have been set in named_references_that_can_be_set_at_runtime.
- Fixed a bug in array formulae expansion: now copes with functions that have a variable number of arguments

# 0.1.9

- Removed chartsheets from the list of worksheets

# 0.1.8

- Remove newlines from excel formulae. This may turn out to be a bad idea (newlines in strings in formulae?) but needed for now.
- Implemented the LARGE(array,k) excel function in C and in Ruby

# 0.1.7

- Implemented the INT(number) excel function in C and in Ruby.

# 0.1.6

- named_references_to_keep can now be set to as :all to create getters for all named references
- named_references_that_can_be_set_at_runtime can now be set to :where_possible to create setters for named references that point to settable cells

# 0.1.5

- map_formulae_to_values now caches its results, which dramatically speeds up some edge-case long formulae
- Fixed an error in the way the C version of excel's IF function was implemented. It no longer returns an error if the unused argument is an error.
- Fixed an error in the way that the ruby shim for the C version handled functions that return ranges (appears when trying to access named reference ranges)
- Now transfer named references into cells to keep early in the process so that referenced but empty cells are kept in final results

# 0.1.4

- Changed from requiring Ruby 1.9 to requiring 1.9 or newer. 

# 0.1.3

- Closed #9 a bug which left Getsetranges where it shouldn't be.
- Closed #10 a bug that gave named references a prefix of '_'

# 0.1.2

- C version: Fixed naming of common methods
- Updated the way that command tests are run
- Merged energynumbers memory freeing code

# 0.1.1

- C version: now optionally writes out accessors for named references
- C version: shim can now get and set arrays of values, where the underlying C code supports it (which is only the case for some named references)
- C version: fixed bug in mapping of sheet names that could occur if two sheets had similar names

# 0.1.0

- BACKWARDS INCOMPATIBLE CHANGE: The ExcelValue struct in the Ruby FFI interface that is generated when compiling excel to C now gives type 'pointer' to its 'string' attribute. This is so that string values can be written through the FFI interface as well as read.

- C version now generates a Shim class that automatically translates between ruby values and excel values. This makes it closer to being drop in compatible with the Ruby version.

# 0.0.14

- Fix parsing of non-western characters in formulae and named references

# 0.0.13

- Fix homepage in gem

# 0.0.12

- By default, the generated tests for the generated code are more relaxed about how closely numbers match.
- Command line option to generate tests that require an exact match

# 0.0.11

- Better handling of shared formulae in Excel: copes with cells that are exceptions to the general sharing rule

# 0.0.10

- Increased the default heap size for the memory to be freed later heap

# 0.0.9

- Memory used by generated C code can now be freed, reducing memory leak

# 0.0.8

- Simplified the code by making it automatically generate filenames for intermediate files
- Added a script to clean up the examples directory
- Fix bug that removed too many cells if the user hadn't specified the cells that they wished to keep

# 0.0.7

- The dynamic library name is no longer hardwired in the generated C makefile
- Better defaults for which cells are considered settable

# 0.0.6

- Ensure that if you have explicitly made a cell settable, it always appears in the resulting, even if it is blank or unneeded by the output functions

# 0.0.5

- Fixed intermittent bug in average function of excel_to_c_runtime.c

# 0.0.4

- Specifing an output name in snake_case will now cause camel case ruby module names to be created (e.g., --output-name simple_model causes a class called SimpleModel to be created )
- Fixed bug where rubypeg dependency was not specified.

# 0.0.3

- Refactoring
- Fixed bug when specifying individual cell dependencies

# 0.0.2

Added an option to just keep intermediate files in memory rather than writing them to disk

# 0.0.1

First release as a gem
